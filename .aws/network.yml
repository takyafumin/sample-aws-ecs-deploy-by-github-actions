AWSTemplateFormatVersion: '2010-09-09'
Description: Pre-requisite resources for Laravel ECS on Fargate Deployment

Resources:
  # --------------------------
  # VPC
  # --------------------------
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: LaravelVPC

  # --------------------------
  # Internet Gateway
  # --------------------------
  InternetGateway:
    Type: AWS::EC2::InternetGateway

  # --------------------------
  # Attach Internet Gateway to VPC
  # --------------------------
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # --------------------------
  # Public Subnet
  # --------------------------
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: LaravelPublicSubnet

  # --------------------------
  # Route Table
  # --------------------------
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  # --------------------------
  # Route
  # --------------------------
  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # --------------------------
  # Route Table Association
  # --------------------------
  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTable

  # --------------------------
  # Security Group
  # --------------------------
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP and SSH access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp  # VPCエンドポイント用のルールを追加
          FromPort: 443
          ToPort: 443
          CidrIp: 10.0.0.0/16
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: LaravelSecurityGroup

  # --------------------------
  # ECR リポジトリ
  # --------------------------
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: laravel-app
      ImageScanningConfiguration:
        ScanOnPush: true
      ImageTagMutability: MUTABLE

  # --------------------------
  # VPC Endpoints
  # --------------------------
  ECRApiEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecr.api
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref SecurityGroup
      SubnetIds:
        - !Ref PublicSubnet

  ECRDkrEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecr.dkr
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref SecurityGroup
      SubnetIds:
        - !Ref PublicSubnet

  CloudWatchLogsEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.logs
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref SecurityGroup
      SubnetIds:
        - !Ref PublicSubnet

  # S3エンドポイントを追加（ECRはS3も必要）
  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      VpcEndpointType: Gateway
      RouteTableIds:
        - !Ref RouteTable

  # --------------------------
  # ECS用のセキュリティグループ
  # --------------------------
  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ECS endpoints
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: !Ref SecurityGroup
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: LaravelECSSecurityGroup

Outputs:
  # --------------------------
  # VPC ID
  # --------------------------
  VpcId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::StackName}-VpcId

  # --------------------------
  # Subnet IDs
  # --------------------------
  SubnetIds:
    Description: Subnet IDs
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub ${AWS::StackName}-SubnetIds

  # --------------------------
  # ECR Repository URI
  # --------------------------
  ECRRepositoryUri:
    Description: ECR Repository URI
    Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECRRepository}
    Export:
      Name: !Sub ${AWS::StackName}-ECRRepositoryUri

  # --------------------------
  # ECR Repository Name
  # --------------------------
  ECRRepositoryName:
    Description: ECR Repository Name
    Value: !Ref ECRRepository
    Export:
      Name: !Sub ${AWS::StackName}-ECRRepositoryName
